/* bootJar는 Spring Boot에서 사용되는 JAR 파일을 생성하는 작업입니다.
이 설정은 Spring Boot의 실행 가능한 JAR 파일 생성을 비활성화합니다.
Spring Boot에서는 bootJar를 통해 애플리케이션을 독립적으로 실행할 수 있는 JAR 파일을 생성하지만,
이 설정은 이를 비활성화하고 일반적인 JAR 파일로만 만들도록 합니다. */
bootJar { enabled = false }

/* jar 작업은 표준 Java JAR 파일을 생성하는 작업입니다.
이 설정은 jar를 활성화하여 기본 Java 애플리케이션 JAR 파일을 생성하도록 합니다.
일반적으로 이와 같은 설정은 라이브러리 JAR 파일을 생성하거나 다른 프로젝트에 의존성으로 사용될 JAR 파일을 생성할 때 사용됩니다. */
jar { enabled = true }

dependencies {
    //implementation project(':reservation-core')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    /* Springdoc OpenAPI 라이브러리로, Swagger UI와 OpenAPI 명세를 통해 API 문서를 자동으로 생성해줍니다.
    이 라이브러리를 사용하면 프로젝트의 REST API 문서를 쉽게 작성하고 시각적으로 확인할 수 있습니다. */
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT
    /* JJWT (Java JSON Web Token) 라이브러리의 API 부분입니다. 이 라이브러리는 JWT 토큰을 생성하고 검증하는 데 사용됩니다.
    JWT는 주로 인증 및 권한 부여를 위한 토큰 방식으로 사용되며, JSON 기반의 경량 토큰입니다. */
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

    /* jjwt-api에서 정의된 기능의 구현체입니다. 런타임에만 필요하므로 runtimeOnly로 지정되어 있습니다.
    이 설정은 컴파일 시에는 필요하지 않지만, 애플리케이션이 실제로 실행될 때 JWT 토큰 생성을 처리합니다. */
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'

    /* JWT를 JSON 형식으로 직렬화/역직렬화할 때 사용하는 Jackson 라이브러리 지원을 위한 의존성입니다.
    JWT의 payload를 처리하기 위해 JSON 직렬화 라이브러리를 필요로 하기 때문에 이 의존성이 추가된 것입니다. */
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}